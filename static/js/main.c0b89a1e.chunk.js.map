{"version":3,"sources":["Card.js","Deck.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","angle","Math","random","xPos","yPos","_transform","style","transform","this","className","src","image","alt","name","Component","API_BASE_URL","Deck","state","deck","drawn","getCard","bind","a","axios","get","setState","data","deck_id","cardUrl","cardRes","success","Error","card","cards","st","id","code","value","suit","alert","map","c","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAyBeA,E,kDArBX,WAAYC,GAAO,IAAD,sBACd,cAAMA,GACN,IAAIC,EAAwB,GAAhBC,KAAKC,SAAgB,GAC7BC,EAAuB,GAAhBF,KAAKC,SAAgB,GAC5BE,EAAuB,GAAhBH,KAAKC,SAAgB,GAJlB,OAKd,EAAKG,WAAL,oBAA+BF,EAA/B,eAA0CC,EAA1C,sBAA4DJ,EAA5D,QALc,E,0CAOlB,WAGI,OACI,qBACIM,MAAO,CAACC,UAAWC,KAAKH,YACxBI,UAAU,OACVC,IAAKF,KAAKT,MAAMY,MAChBC,IAAKJ,KAAKT,MAAMc,W,GAhBbC,a,yBCCbC,EAAe,sCAwDNC,E,kDApDX,WAAYjB,GAAO,IAAD,8BACd,cAAMA,IACDkB,MAAQ,CAAEC,KAAM,KAAMC,MAAO,IAClC,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBAHD,E,4FAKlB,4BAAAC,EAAA,sEACqBC,IAAMC,IAAN,UAAaT,EAAb,kBADrB,OACQG,EADR,OAEIV,KAAKiB,SAAS,CAAEP,KAAMA,EAAKQ,OAF/B,gD,kHAKA,kCAAAJ,EAAA,6DACQK,EAAUnB,KAAKS,MAAMC,KAAKS,QADlC,SAGYC,EAHZ,UAGyBb,EAHzB,YAGyCY,EAHzC,mBAI4BJ,IAAMC,IAAII,GAJtC,WAIYC,EAJZ,QAKoBH,KAAKI,QALzB,sBAMkB,IAAIC,MAAM,4BAN5B,OAQYC,EAAOH,EAAQH,KAAKO,MAAM,GAE9BzB,KAAKiB,UAAS,SAAAS,GAAE,MAAI,CAChBf,MAAM,GAAD,mBACEe,EAAGf,OADL,CAED,CACIgB,GAAIH,EAAKI,KACTzB,MAAOqB,EAAKrB,MACZE,KAAK,GAAD,OAAKmB,EAAKK,MAAV,eAAsBL,EAAKM,aAhBnD,kDAqBQC,MAAM,EAAD,IArBb,0D,0EAyBA,WACI,IAAMN,EAAQzB,KAAKS,MAAME,MAAMqB,KAAI,SAAAC,GAAC,OAChC,cAAC,EAAD,CAAiB5B,KAAM4B,EAAE5B,KAAMF,MAAO8B,EAAE9B,OAA7B8B,EAAEN,OAEjB,OACI,sBAAK1B,UAAU,OAAf,UACI,oBAAIA,UAAU,aAAd,uCACA,oBAAIA,UAAU,sBAAd,yDACA,wBAAQA,UAAU,WAAWiC,QAASlC,KAAKY,QAA3C,uBACA,qBAAKX,UAAU,gBAAf,SACCwB,W,GA9CEnB,aCIJ6B,MARf,WACE,OACE,qBAAKlC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c0b89a1e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Card.css';\r\n\r\nclass Card extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        let angle = Math.random() * 90 - 45;\r\n        let xPos = Math.random() * 40 - 20;\r\n        let yPos = Math.random() * 40 - 20;\r\n        this._transform = `translate(${xPos}px, ${yPos}px) rotate(${angle}deg)`;\r\n    }\r\n    render(){\r\n    // transform: translate(10px, 20px) rotate(20deg);\r\n    \r\n        return(\r\n            <img \r\n                style={{transform: this._transform}} \r\n                className=\"Card\" \r\n                src={this.props.image} \r\n                alt={this.props.name}                     \r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport Card from './Card';\r\nimport './Deck.css';\r\nimport axios from 'axios';\r\nconst API_BASE_URL = \"https://deckofcardsapi.com/api/deck\";\r\n\r\n\r\nclass Deck extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { deck: null, drawn: []};\r\n        this.getCard = this.getCard.bind(this);\r\n    }\r\n    async componentDidMount(){\r\n        let deck = await axios.get(`${API_BASE_URL}/new/shuffle/`)\r\n        this.setState({ deck: deck.data })        \r\n    }\r\n\r\n    async getCard(){\r\n        let deck_id = this.state.deck.deck_id;\r\n        try {\r\n            let cardUrl = `${API_BASE_URL}/${deck_id}/draw/`;\r\n            let cardRes = await axios.get(cardUrl);        \r\n            if(!cardRes.data.success){\r\n                throw new Error(\"NO HAY MÁS CARTAS NEN\")\r\n            }\r\n            let card = cardRes.data.cards[0];\r\n            \r\n            this.setState(st =>({\r\n                drawn: [\r\n                    ...st.drawn,\r\n                    {\r\n                        id: card.code,\r\n                        image: card.image,\r\n                        name: `${card.value} of ${card.suit}`\r\n                    }\r\n                ]\r\n            }))\r\n        } catch(err){\r\n            alert(err);\r\n        }\r\n        \r\n    }\r\n    render(){\r\n        const cards = this.state.drawn.map(c => (\r\n            <Card key={c.id} name={c.name} image={c.image} />\r\n        ))\r\n        return (\r\n            <div className=\"Deck\">\r\n                <h1 className=\"Deck-title\">♦ Card Dealer ♦</h1>\r\n                <h2 className=\"Deck-title subtitle\">♦ A little demo made with React ♦</h2>\r\n                <button className=\"Deck-btn\" onClick={this.getCard}>Get Card!</button>\r\n                <div className=\"Deck-cardarea\">\r\n                {cards}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Deck;\r\n","import './App.css';\nimport Deck from './Deck';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Deck />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}